{"remainingRequest":"/home/melissa/Bureau/TodoListProject-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/melissa/Bureau/TodoListProject-main/src/components/TodoList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/melissa/Bureau/TodoListProject-main/src/components/TodoList.vue","mtime":1614969564000},{"path":"/home/melissa/Bureau/TodoListProject-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/melissa/Bureau/TodoListProject-main/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/melissa/Bureau/TodoListProject-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/melissa/Bureau/TodoListProject-main/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7bWFwR2V0dGVycywgbWFwQWN0aW9uc30gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVG9kb0xpc3QnLAogIHByb3BzOiB7CiAgICBpZDoge3R5cGU6IE51bWJlcn0KICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoJ3RvZG9MaXN0JywgWydhZGRUb2RvJywgJ3JlbW92ZVRvZG8nLCAndG9kb0NvbXBsZXRlZCddKSwKICAgIHNldEZpbHRlcih2YWx1ZSkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3RvZG9MaXN0L1NFVF9GSUxURVInLCB2YWx1ZSkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKCd0b2RvTGlzdCcsIFsnZmlsdGVyZWRUb2RvcycsICdyZW1haW5pbmdUb2RvcyddKSwKICAgIG5ld1RvZG86IHsKICAgICAgZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5uZXdUb2RvCiAgICAgIH0sCiAgICAgIHNldCh2YWx1ZSkgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndG9kb0xpc3QvU0VUX05FV19UT0RPJywgdmFsdWUpCiAgICAgIH0KICAgIH0sICAgCiAgfSwKfQo="},{"version":3,"sources":["/home/melissa/Bureau/TodoListProject-main/src/components/TodoList.vue"],"names":[],"mappings":"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","file":"/home/melissa/Bureau/TodoListProject-main/src/components/TodoList.vue","sourceRoot":"","sourcesContent":["<template>\n    <main>\n        <form @submit.prevent=\"addTodo(id)\">\n            <input type=\"text\" v-model=\"newTodo\">\n            <input type=\"submit\" value=\"Add todo\">\n        </form>\n        <p class=\"filters\">\n            <button @click=\"setFilter('all')\">All</button>\n            <button @click=\"setFilter('completed')\">Completed</button>\n            <button @click=\"setFilter('not-completed')\">Not Completed</button>\n        </p>\n        <ul>\n            <li v-for=\"todo in filteredTodos(id)\" :key=\"todo.id\" @click=\"todoCompleted([id, todo.id])\">\n                <span :class=\"{ completed: todo.completed }\"><input type=\"checkbox\" :checked=\"todo.completed\">{{todo.name}}</span>\n                <button @click.stop=\"removeTodo([id, todo.id])\">&times;</button>\n            </li>\n        </ul>\n        <p>Vous avez <strong>{{ remainingTodos(id) }}</strong> tâche(s) à faire</p>\n    </main>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex'\n\nexport default {\n  name: 'TodoList',\n  props: {\n    id: {type: Number}\n  },\n  methods: {\n    ...mapActions('todoList', ['addTodo', 'removeTodo', 'todoCompleted']),\n    setFilter(value) {\n      this.$store.commit('todoList/SET_FILTER', value)\n    }\n  },\n  computed: {\n    ...mapGetters('todoList', ['filteredTodos', 'remainingTodos']),\n    newTodo: {\n      get() {\n        return this.$store.state.newTodo\n      },\n      set(value) {\n        this.$store.commit('todoList/SET_NEW_TODO', value)\n      }\n    },   \n  },\n}\n</script>\n\n<style scoped>\nmain {\n  grid-area: section;\n}\nul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\nli {\n    border: 1px solid #ccc;\n    display: flex;\n    justify-content: space-between;\n    padding: .5rem 2rem;\n    margin: .5rem 0;\n}\nli:hover {\n    background: #eee;\n}\n.filters {\n  margin-bottom: .5rem;\n}\n.filters button {\n  margin-right: .5rem;\n}\ninput[type=\"checkbox\"] {\n    margin-right: .5rem;\n}\n.completed {\n    text-decoration: line-through;\n}\n</style>"]}]}